<?php

declare(strict_types=1);

/*
 * This file is part of the "t3_notifier" Extension for TYPO3 CMS.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 */

use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;
use function Symfony\Component\DependencyInjection\Loader\Configurator\service;

return static function (ContainerConfigurator $containerConfigurator): void {
    $services = $containerConfigurator->services();
    $services->set('notifier.transport_factory.abstract', AbstractTransportFactory::class)
        ->abstract()
        ->args([service('event_dispatcher'), service('http_client')->ignoreOnInvalid()])
        ->set('notifier.transport_factory.slack', SlackTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.linked-in', LinkedInTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.telegram', TelegramTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.mattermost', MattermostTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.vonage', VonageTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.rocket-chat', RocketChatTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.google-chat', GoogleChatTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.twilio', TwilioTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.all-my-sms', AllMySmsTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.firebase', FirebaseTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.forty-six-elks', FortySixElksTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.free-mobile', FreeMobileTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.spot-hit', SpotHitTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.fake-chat', FakeChatTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.fake-sms', FakeSmsTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.ovh-cloud', OvhCloudTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.sinch', SinchTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.zulip', ZulipTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.infobip', InfobipTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.mobyt', MobytTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.smsapi', SmsapiTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.esendex', EsendexTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.sendberry', SendberryTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.sendinblue', SendinblueTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.iqsms', IqsmsTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.octopush', OctopushTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.discord', DiscordTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.microsoft-teams', MicrosoftTeamsTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.gateway-api', GatewayApiTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.mercure', MercureTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.gitter', GitterTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.clickatell', ClickatellTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.contact-everyone', ContactEveryoneTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.amazon-sns', AmazonSnsTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.null', NullTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.light-sms', LightSmsTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.sms-biuras', SmsBiurasTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.smsc', SmscTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.sms-factor', SmsFactorTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.message-bird', MessageBirdTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.message-media', MessageMediaTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.telnyx', TelnyxTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.mailjet', MailjetTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.yunpian', YunpianTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.turbo-sms', TurboSmsTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.sms77', Sms77TransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.one-signal', OneSignalTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.orange-sms', OrangeSmsTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.expo', ExpoTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.kaz-info-teh', KazInfoTehTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.engagespot', EngagespotTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('texter.transport_factory')
        ->set('notifier.transport_factory.zendesk', ZendeskTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
        ->set('notifier.transport_factory.chatwork', ChatworkTransportFactory::class)
        ->parent('notifier.transport_factory.abstract')
        ->tag('chatter.transport_factory')
    ;
};
